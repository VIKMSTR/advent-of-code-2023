# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    - name: Qodana Scan
      # You may pin to the exact commit or the version.
      # uses: JetBrains/qodana-action@95ecb19ba27e308153723e54a790e4ad908b13a0
      uses: JetBrains/qodana-action@v2023.2.8
      env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
      with:
        # Directory to store the analysis results
        results-dir: bin/qodana/results # optional, default is ${{ runner.temp }}/qodana/results
        # Directory to store Qodana caches
        cache-dir: bin /qodana/caches # optional, default is ${{ runner.temp }}/qodana/caches
        # Automatically restore and save Qodana caches using GitHub caches
        use-caches: true # optional, default is true
        # Upload Qodana results (SARIF, other artifacts, logs) as an artifact to the job
        upload-result: false # optional, default is false
        # Analyze ONLY changed files in a pull request
        pr-mode: true # optional, default is true
        # Post a comment with the Qodana results summary to the pull request
        # GitHub token to access the repository: post annotations, comments
        github-token:  ${{ github.token }} # optional, default is ${{ github.token }}
        # Push Qodana fixes to the repository, can be none, branch to the current branch, or a pull request
        push-fixes: none # optional, default is none
        # Commit message for the commit with quick-fixes. Not used if `push-fixes` is set to `none`
        # commit-message: # optional, default is ðŸ¤– Apply quick-fixes by Qodana
               
